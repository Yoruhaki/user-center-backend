[project]
name = "user-center-backend"
version = "0.1.0"
description = "Fastapi user center backend. Handles auth, permissions, and secure user data."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[all]>=0.115.12",
    "tortoise-orm[asyncpg]>=0.25.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "commitizen>=4.8.2",
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
    "aerich[toml]>=0.9.0",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "uv"
update_changelog_on_bump = true
major_version_zero = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.aerich]
tortoise_orm = "src.app.core.database.TORTOISE_ORM"
location = "./migrations"
src_folder = "./."

[tool.coverage.run]
branch = true
omit = [
    "src/app/utils/*.py",
    "src/tests/**/*.py"
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "^#.*",
    "^$",
    "raise NotImplementedError",
    "print"
]

[tool.coverage.html]
directory = "reports/coverage/coverage_html"

[tool.coverage.xml]
output = "reports/coverage/coverage.xml"

[tool.ruff]
exclude = [
    ".lock",
    ".toml",
    ".yaml",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".md",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    ".python-version",
    ".gitignore",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "__pycache__",
]
